{"version":3,"file":"react-router.production.min.js","sources":["../../../../packages/react-router/lib/context.ts","../../../../packages/react-router/lib/hooks.tsx","../../../../packages/react-router/lib/components.tsx"],"sourcesContent":["import * as React from \"react\";\nimport type { History, Location, RouteMatch, Router } from \"@remix-run/router\";\nimport { Action as NavigationType } from \"@remix-run/router\";\n\n// Contexts for data routers\nexport const DataRouterContext = React.createContext<Router | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RouteMatch,\n  RouteObject,\n  Router as DataRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  getToPathname,\n  invariant,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n  warningOnce,\n} from \"@remix-run/router\";\n\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext\n  );\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  return (\n    <>\n      <h2>Unhandled Thrown Error!</h2>\n      <p style={{ fontStyle: \"italic\" }}>{error?.message || error}</p>\n      {error?.stack ? (\n        <pre style={preStyles}>{error?.stack}</pre>\n      ) : null}\n      <p>💿 Hey developer 👋</p>\n      <p>\n        You can provide a way better UX than this when your app throws errors by\n        providing your own&nbsp;\n        <code style={codeStyles}>errorElement</code> props on&nbsp;\n        <code style={codeStyles}>&lt;Route&gt;</code>\n      </p>\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteErrorContext.Provider\n        value={this.state.error}\n        children={this.props.component}\n      />\n    ) : (\n      this.props.children\n    );\n  }\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: DataRouter[\"state\"] | null\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let getChildren = () => (\n      <RouteContext.Provider\n        children={\n          error\n            ? errorElement\n            : match.route.element !== undefined\n            ? match.route.element\n            : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(renderedMatches.slice(0, index + 1)),\n        }}\n      />\n    );\n\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction useDataRouterState(hookName: DataRouterHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, `${hookName} must be used within a DataRouter`);\n  return state;\n}\n\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterHook.UseNavigation);\n  return state.transition;\n}\n\nexport function useRevalidator() {\n  let router = React.useContext(DataRouterContext);\n  invariant(router, `useRevalidator must be used within a DataRouter`);\n  let state = useDataRouterState(DataRouterHook.UseRevalidator);\n  return { revalidate: router.revalidate, state: state.revalidation };\n}\n\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(DataRouterHook.UseMatches);\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id],\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\nexport function useLoaderData() {\n  let state = useDataRouterState(DataRouterHook.UseLoaderData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useLoaderData must be used inside a RouteContext`);\n\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${useLoaderData} can only be used on routes that contain a unique \"id\"`\n  );\n\n  return state.loaderData?.[thisRoute.route.id];\n}\n\nexport function useRouteLoaderData(routeId: string): any {\n  let state = useDataRouterState(DataRouterHook.UseRouteLoaderData);\n  return state.loaderData?.[routeId];\n}\n\nexport function useActionData() {\n  let state = useDataRouterState(DataRouterHook.UseRouteError);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useRouteError must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\nexport function useRouteError() {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterHook.UseRouteError);\n  let route = React.useContext(RouteContext);\n  let thisRoute = route.matches[route.matches.length - 1];\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  invariant(route, `useRouteError must be used inside a RouteContext`);\n  invariant(\n    thisRoute.route.id,\n    `useRouteError can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[thisRoute.route.id];\n}\n","import * as React from \"react\";\nimport type {\n  HydrationState,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  RouteMatch,\n  RouteObject,\n  Router as DataRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  createMemoryRouter,\n  invariant,\n  normalizePathname,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\n\nimport {\n  LocationContext,\n  NavigationContext,\n  Navigator,\n  DataRouterContext,\n  DataRouterStateContext,\n} from \"./context\";\nimport {\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport function useRenderDataRouter({\n  children,\n  fallbackElement,\n  // FIXME: Figure out if we want to use a direct prop or support useRoutes()\n  todo_bikeshed_routes,\n  createRouter,\n}: {\n  children?: React.ReactNode;\n  fallbackElement?: React.ReactElement;\n  todo_bikeshed_routes?: RouteObject[];\n  createRouter: (routes: RouteObject[]) => DataRouter;\n}): React.ReactElement {\n  let routes = todo_bikeshed_routes || createRoutesFromChildren(children);\n  let [router] = React.useState<DataRouter>(() => createRouter(routes));\n\n  // TODO: For React 18 we can move to useSyncExternalStore via feature detection\n  // state = React.useSyncExternalStore(router.subscribe, () => router.state);\n\n  let [state, setState] = React.useState<DataRouter[\"state\"]>(\n    () => router.state\n  );\n  React.useEffect(() => {\n    let unsubscribe = router.subscribe((newState) => setState(newState));\n\n    // If we have loaders to run for an initial data load, and all of those loaders\n    // are synchronous, then they'll actually trigger completeNavigation _before_\n    // we get here, so we'll never call setState.  Capture that scenario here\n    if (!state.initialized && router.state.initialized) {\n      setState(router.state);\n    }\n\n    return () => {\n      unsubscribe();\n      router.cleanup();\n    };\n  }, [router, state.initialized]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      go: (n) => router.navigate(n),\n      push: (to, state) => router.navigate(to, { state }),\n      replace: (to, state) => router.navigate(to, { replace: true, state }),\n    };\n  }, [router]);\n\n  if (!state.initialized) {\n    return fallbackElement || <DefaultFallbackElement />;\n  }\n\n  return (\n    <DataRouterContext.Provider value={router}>\n      <DataRouterStateContext.Provider value={state}>\n        <Router\n          location={state.location}\n          navigationType={state.historyAction}\n          navigator={navigator}\n        >\n          {todo_bikeshed_routes ? (\n            <DataRoutes routes={routes} />\n          ) : (\n            <Routes children={children} />\n          )}\n        </Router>\n      </DataRouterStateContext.Provider>\n    </DataRouterContext.Provider>\n  );\n}\n\nfunction DefaultFallbackElement() {\n  return (\n    <>\n      <style>{`\n        :root {\n          --size: 25vh;\n        }\n\n        .rr-fallback__flex {\n          text-align: center;\n          width: 100%;\n          height: 100vh;\n          display: flex;\n          align-items: center;\n          justify-content: center;  \n        }\n\n        .rr-fallback__rotate {\n          display: block;\n          width: var(--size);\n          height: var(--size);\n          font-size: var(--size);\n          animation-name: spin;\n          animation-duration: 1s;\n          animation-timing-function: ease-in-out;\n          animation-iteration-count: infinite;\n          transform: rotate(0deg);\n          transform-origin: 50% 50%;\n        }\n\n        @keyframes spin {\n          from { transform: rotate(0deg); }\n          to { transform: rotate(360deg); }\n        }\n\n        @media (prefers-reduced-motion) {\n          .rr-fallback__rotate {\n            animation-iteration-count: 0;\n          }\n        }\n\n        .rr-fallback__cd {\n          width: var(--size);\n          height: var(--size);\n          line-height: var(--size);\n          margin-top: 5%;\n        }\n      `}</style>\n      <div className=\"rr-fallback__flex\">\n        <div className=\"rr-fallback__rotate\">\n          <p className=\"rr-fallback__cd\">💿</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport interface DataMemoryRouterProps {\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  hydrationData?: HydrationState;\n  fallbackElement?: React.ReactElement;\n  todo_bikeshed_routes?: RouteObject[];\n}\n\nexport function DataMemoryRouter({\n  children,\n  initialEntries,\n  initialIndex,\n  hydrationData,\n  fallbackElement,\n  todo_bikeshed_routes,\n}: DataMemoryRouterProps): React.ReactElement {\n  return useRenderDataRouter({\n    children,\n    fallbackElement,\n    todo_bikeshed_routes,\n    createRouter: (routes) =>\n      createMemoryRouter({\n        initialEntries,\n        initialIndex,\n        routes,\n        hydrationData,\n      }),\n  });\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\ninterface DataRouteProps {\n  id?: RouteObject[\"id\"];\n  loader?: RouteObject[\"loader\"];\n  action?: RouteObject[\"action\"];\n  errorElement?: RouteObject[\"errorElement\"];\n  shouldRevalidate?: RouteObject[\"shouldRevalidate\"];\n}\n\nexport interface RouteProps extends DataRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps extends DataRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps extends DataRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps extends DataRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\ninterface DataRoutesProps {\n  routes: RouteObject[];\n}\n\n// Internal wrapper to render routes provided to a DataRouter via props instead\n// of children.  This is primarily to avoid re-calling createRoutesFromChildren\nfunction DataRoutes({ routes }: DataRoutesProps): React.ReactElement | null {\n  return useRoutes(routes);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      shouldRevalidate: element.props.shouldRevalidate,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null,\n  dataRouterState: DataRouter[\"state\"] | null\n): React.ReactElement | null {\n  return _renderMatches(matches, undefined, dataRouterState);\n}\n"],"names":["DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","matches","RouteErrorContext","useInRouterContext","useLocation","invariant","location","useNavigate","basename","navigator","pathname","locationPathname","routePathnamesJson","JSON","stringify","map","match","pathnameBase","activeRef","current","to","options","go","path","resolveTo","parse","joinPaths","replace","push","state","OutletContext","useOutlet","context","React.createElement","Provider","value","useResolvedPath","useRoutes","routes","locationArg","dataRouterStateContext","parentMatches","routeMatch","length","parentParams","params","parentPathnameBase","locationFromContext","route","parsedLocationArg","parsePath","_parsedLocationArg$pa","startsWith","remainingPathname","slice","matchRoutes","_renderMatches","Object","assign","DefaultErrorElement","error","useRouteError","lightgrey","preStyles","padding","backgroundColor","codeStyles","style","fontStyle","message","stack","RenderErrorBoundary","constructor","props","componentDidCatch","errorInfo","console","render","this","children","component","dataRouterState","renderedMatches","errors","errorIndex","findIndex","m","id","Math","min","reduceRight","index","errorElement","getChildren","undefined","element","concat","DataRouterHook","useDataRouterState","hookName","UseRouteError","thisRoute","_state$errors","useRenderDataRouter","fallbackElement","todo_bikeshed_routes","createRouter","createRoutesFromChildren","router","setState","unsubscribe","subscribe","newState","initialized","cleanup","createHref","n","navigate","Router","navigationType","historyAction","DataRoutes","Routes","DefaultFallbackElement","className","Route","_props","basenameProp","locationProp","NavigationType","Pop","static","staticProp","normalizePathname","navigationContext","search","hash","key","trailingPathname","stripBasename","parentPath","forEach","type","apply","treePath","join","caseSensitive","loader","action","shouldRevalidate","initialEntries","initialIndex","hydrationData","createMemoryRouter","historyRef","createMemoryHistory","v5Compat","history","listen","values","actionData","joinedPathname","toPathname","getToPathname","endsWithSlash","endsWith","UseLoaderData","loaderData","_state$loaderData","pattern","matchPath","UseMatches","data","UseNavigation","transition","UseRevalidator","revalidate","revalidation","routeId","UseRouteLoaderData","_state$loaderData2"],"mappings":"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"}